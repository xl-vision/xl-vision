name: build
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci && npm run bootstrap -- --no-ci

      - name: lint
        uses: bradennapier/eslint-plus-action@master
        with:
          reportWarningsAsErrors: true

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci && npm run bootstrap -- --no-ci

      - name: test
        run: npm run test -- --coverage --bail

      - name: codecov
        run: bash <(curl -s https://codecov.io/bash)

      - name: codacy-coverage
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{secrets.CODACY_TOKEN}}

  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci && npm run bootstrap -- --no-ci

      - name: build
        run: npm run build

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm ci && npm run bootstrap -- --no-ci

      - name: docs
        run: npm run docs

      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v1.1
      #   with:
      #     publish-dir: './platforms/docs'
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     # production-branch: master
      #     production-deploy: ${{ github.event_name == 'release' && github.event.action == 'created' }}
      #     deploy-message: 'Deploy from GitHub Actions'
      #     enable-pull-request-comment: true
      #     enable-commit-comment: true
      #     overwrites-pull-request-comment: true
      #     netlify-config-path: ./netlify.toml
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #   timeout-minutes: 1
