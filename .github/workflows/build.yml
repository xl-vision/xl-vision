name: build
on:
  pull_request:
  push:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm install && npm run bootstrap -- --no-ci

      - name: lint
        uses: bradennapier/eslint-plus-action@v3.4.2

  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm install && npm run bootstrap -- --no-ci

      - name: build
        run: npm run build

      - name: Deploy to Netlify
        uses: South-Paw/action-netlify-deploy@v1.0.4
        with:
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
          draft: ${{ github.event_name != 'release' || github.event.action != 'created' }}
          message: 'Deploy from GitHub Actions'
          build-dir: './platforms/docs/dist'
          comment-on-pull-request: true
          comment-on-commit: true
          config-path: ./netlify.toml
        timeout-minutes: 1

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm install && npm run bootstrap -- --no-ci

      - name: test
        run: npm run test -- --coverage --bail

      - name: codecov
        run: bash <(curl -s https://codecov.io/bash)

      - name: codacy-coverage
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{secrets.CODACY_TOKEN}}
